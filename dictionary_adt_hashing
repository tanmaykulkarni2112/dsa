class HashTable:
    def __init__(self, size):
        self.size = size
        self.table = [None] * size
    
    def hash_function(self, key):
        return hash(key) % self.size
    
    def insert(self, key, value):
        index = self.hash_function(key)
        if self.table[index] is None:
            self.table[index] = [(key, value)]
        else:
            for i, (existing_key, _) in enumerate(self.table[index]):
                if existing_key == key:
                    self.table[index][i] = (key, value)  # Update existing key-value pair
                    return
            self.table[index].append((key, value))  # Collision handling: append to the chain
    
    def find(self, key):
        index = self.hash_function(key)
        if self.table[index] is not None:
            for existing_key, value in self.table[index]:
                if existing_key == key:
                    return value
            raise KeyError(f"Key '{key}' not found")
    
    def delete(self, key):
        index = self.hash_function(key)
        if self.table[index] is not None:
            for i, (existing_key, _) in enumerate(self.table[index]):
                if existing_key == key:
                    del self.table[index][i]  # Delete key-value pair
                    return
            raise KeyError(f"Key '{key}' not found")

def print_menu():
    print("\nMenu:")
    print("1. Insert key-value pair")
    print("2. Find value by key")
    print("3. Delete key-value pair")
    print("4. Exit")

def main():
    size = int(input("Enter size of hash table: "))
    dictionary = HashTable(size)
    while True:
        print_menu()
        choice = input("Enter your choice: ")
        if choice == "1":
            key = input("Enter key: ")
            value = input("Enter value: ")
            dictionary.insert(key, value)
            print("Key-value pair inserted successfully.")
        elif choice == "2":
            key = input("Enter key to find value: ")
            try:
                value = dictionary.find(key)
                print(f"Value found: {value}")
            except KeyError as e:
                print(e)
        elif choice == "3":
            key = input("Enter key to delete: ")
            try:
                dictionary.delete(key)
                print("Key-value pair deleted successfully.")
            except KeyError as e:
                print(e)
        elif choice == "4":
            print("Exiting program.")
            break
        else:
            print("Invalid choice. Please enter a valid option.")

if __name__ == "__main__":
    main()
